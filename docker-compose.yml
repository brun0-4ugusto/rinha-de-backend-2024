version: '3.5'
services:
  rinha1:
    hostname: "rinha1"
    build: .
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/mydb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
    deploy:
      resources:
        limits:
          cpus: '0.35'
          memory: '150MB'
    networks:
      - rinha-network

  rinha2:
    hostname: "rinha2"
    build: .
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/mydb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
    deploy:
      resources:
        limits:
          cpus: '0.35'
          memory: '150MB'
    networks:
      - rinha-network

  db: # Banco de dados
    image: postgres
    deploy:
      resources:
        limits:
          cpus: '0.55'
          memory: '200MB'
    command: postgres -c 'max_connections=400'
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      PGUSER: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 3s
      timeout: 5s
      retries: 10
    networks:
      - rinha-network

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - rinha1
      - rinha2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '50MB'
    networks:
      - rinha-network

networks:
  rinha-network: